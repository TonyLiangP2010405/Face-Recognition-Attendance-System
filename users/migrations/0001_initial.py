# Generated by Django 4.2.5 on 2023-09-20 12:13

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="MyUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("ID", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("CourseID", models.CharField(max_length=20)),
                ("course_name", models.CharField(max_length=100)),
                ("StartTime", models.TimeField()),
                ("EndTime", models.TimeField()),
                ("ClassID", models.CharField(max_length=20)),
                ("classroom_no", models.CharField(max_length=10)),
                ("course_date", models.DateField()),
                (
                    "course_state",
                    models.CharField(
                        choices=[(0, "Cancel"), (1, "Normal")], max_length=1
                    ),
                ),
            ],
            options={
                "verbose_name": "Course information",
                "verbose_name_plural": "course_information",
                "db_table": "d_course",
            },
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                ("TeacherID", models.IntegerField(primary_key=True, serialize=False)),
                ("teac_email", models.CharField(max_length=100)),
                (
                    "gender",
                    models.CharField(choices=[(0, "Man"), (1, "Female")], max_length=1),
                ),
                ("age", models.DateField()),
                ("password", models.CharField(max_length=500)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teacher_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "teacher information",
                "verbose_name_plural": "teacher_information",
                "db_table": "d_teacher",
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("StudentID", models.CharField(max_length=8)),
                ("address", models.TextField()),
                ("stud_email", models.CharField(max_length=100)),
                (
                    "gender",
                    models.CharField(choices=[(0, "Man"), (1, "Female")], max_length=1),
                ),
                ("age", models.DateField()),
                ("stud_image", models.ImageField(blank=True, upload_to="studentImage")),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "student information",
                "verbose_name_plural": "student_information",
                "db_table": "d_student",
            },
        ),
        migrations.CreateModel(
            name="Enrollment",
            fields=[
                ("ID", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "CourseID",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="users.course"
                    ),
                ),
                (
                    "StudentID",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="users.student"
                    ),
                ),
            ],
            options={
                "verbose_name": "Enrollment",
                "verbose_name_plural": "Enrollment",
                "db_table": "d_enrollment",
            },
        ),
        migrations.AddField(
            model_name="course",
            name="TeacherID",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="users.teacher"
            ),
        ),
    ]
